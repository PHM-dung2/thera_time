plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    // Node Gradle 플러그인 추가
    id "com.github.node-gradle.node" version "7.0.1" // 최신 호환 버전 확인 권장
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // 스프링
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // 롬복
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // MySql JDBC
    runtimeOnly 'com.mysql:mysql-connector-j'
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // 비크립트
    implementation 'org.springframework.security:spring-security-crypto:6.4.4'
    // JJWT
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    implementation 'io.jsonwebtoken:jjwt:0.12.6'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Validation (유효성 검사용) | Admin 25-04-26
    implementation 'org.springframework.boot:spring-boot-starter-validation'
}

test {
    useJUnitPlatform()
}

// --- React 빌드 관련 Task 정의 ---
// 1. npm install 실행 Task (React 의존성 설치)
task npmInstallReact(type: NpmTask) {
    description = "Install Node.js dependencies from package.json"
    workingDir = file("${project.projectDir}/src/main/reactapp")
    args = ['install']
    inputs.file("src/main/reactapp/package.json")
    inputs.file("src/main/reactapp/package-lock.json")
    outputs.dir("src/main/reactapp/node_modules")
}

// 2. npm run build 실행 Task (React 앱 빌드)
task npmBuildReact(type: NpmTask) {
    description = "Build the React application using npm run build"
    dependsOn npmInstallReact
    workingDir = file("${project.projectDir}/src/main/reactapp")
    args = ['run', 'build']
    inputs.dir("src/main/reactapp/src")
    inputs.dir("src/main/reactapp/public")
    inputs.file("src/main/reactapp/package.json")
    outputs.dir("src/main/reactapp/dist")
}

task copyReactBuild(type: Copy) {
    description = "Copy React build output to Spring Boot static resources"
    dependsOn npmBuildReact
    from "${project.projectDir}/src/main/reactapp/dist"
    into "${project.buildDir}/resources/main/static"
}

processResources {
    dependsOn copyReactBuild
}

clean {
    delete file("${project.projectDir}/src/main/reactapp/node_modules")
    delete file("${project.projectDir}/src/main/reactapp/dist")
}